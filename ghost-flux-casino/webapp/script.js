class GhostFluxCasino {
    constructor() {
        this.userId = this.getUserId();
        this.balance = 0;
        this.inventory = [];
        this.isSpinning = false;
        
        this.init();
    }
    
    getUserId() {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get('user_id');
    }
    
    async init() {
        await this.loadUserData();
        this.renderInventory();
        this.setupEventListeners();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
        if (window.Telegram && Telegram.WebApp) {
            Telegram.WebApp.ready();
            Telegram.WebApp.expand();
        }
    }
    
    async loadUserData() {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –≤–∞—à–µ–º—É –±—ç–∫–µ–Ω–¥—É
        // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
        const savedData = localStorage.getItem(`user_${this.userId}`);
        if (savedData) {
            const data = JSON.parse(savedData);
            this.balance = data.balance || 0;
            this.inventory = data.inventory || [];
        }
        this.updateBalance();
    }
    
    saveUserData() {
        localStorage.setItem(`user_${this.userId}`, JSON.stringify({
            balance: this.balance,
            inventory: this.inventory
        }));
    }
    
    updateBalance() {
        document.getElementById('balance').textContent = `–ë–∞–ª–∞–Ω—Å: ${this.balance} ‚≠ê`;
        const spinButton = document.getElementById('spinButton');
        
        if (this.balance < 50) {
            spinButton.classList.add('disabled');
            spinButton.textContent = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥';
        } else {
            spinButton.classList.remove('disabled');
            spinButton.textContent = 'üé∞ –ö—Ä—É—Ç–∏—Ç—å –∑–∞ 50 ‚≠ê';
        }
    }
    
    renderInventory() {
        const container = document.getElementById('inventoryItems');
        container.innerHTML = '';
        
        this.inventory.forEach(item => {
            const itemElement = document.createElement('div');
            itemElement.className = 'inventory-item';
            itemElement.innerHTML = `
                <div>${item.emoji}</div>
                <small>${item.name}</small>
            `;
            container.appendChild(itemElement);
        });
    }
    
    setupEventListeners() {
        document.getElementById('spinButton').addEventListener('click', () => this.spinRoulette());
        document.getElementById('withdrawBtn').addEventListener('click', () => this.withdrawPrizes());
        document.getElementById('depositBtn').addEventListener('click', () => this.depositBalance());
        document.getElementById('closeModal').addEventListener('click', () => this.closeModal());
    }
    
    async spinRoulette() {
        if (this.isSpinning || this.balance < 50) return;
        
        this.isSpinning = true;
        this.balance -= 50;
        this.updateBalance();
        
        const wheel = document.getElementById('rouletteWheel');
        const items = wheel.querySelectorAll('.roulette-item');
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        wheel.classList.add('spinning');
        
        // –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–∑–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É)
        setTimeout(() => {
            const prize = this.getRandomPrize();
            this.showResult(prize);
            wheel.classList.remove('spinning');
            this.isSpinning = false;
        }, 3000);
    }
    
    getRandomPrize() {
        const prizes = [
            { name: "–ú–∏—à–∫–∞", value: 15, probability: 0.35, emoji: "üß∏" },
            { name: "–°–µ—Ä–¥–µ—á–∫–æ", value: 15, probability: 0.35, emoji: "üíñ" },
            { name: "–†–∞–∫–µ—Ç–∞", value: 50, probability: 0.10, emoji: "üöÄ" },
            { name: "–¢–æ—Ä—Ç", value: 50, probability: 0.10, emoji: "üéÇ" },
            { name: "–ö—É–±–æ–∫", value: 100, probability: 0.05, emoji: "üèÜ" },
            { name: "–ö–æ–ª—å—Ü–æ", value: 100, probability: 0.05, emoji: "üíç" }
        ];
        
        const random = Math.random();
        let cumulative = 0;
        
        for (const prize of prizes) {
            cumulative += prize.probability;
            if (random <= cumulative) {
                return prize;
            }
        }
        
        return prizes[0];
    }
    
    showResult(prize) {
        this.inventory.push(prize);
        this.saveUserData();
        this.renderInventory();
        
        document.getElementById('resultTitle').textContent = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ';
        document.getElementById('resultPrize').innerHTML = `
            <div style="font-size: 4em;">${prize.emoji}</div>
            <h3>${prize.name}</h3>
            <p>–¶–µ–Ω–Ω–æ—Å—Ç—å: ${prize.value} ‚≠ê</p>
        `;
        
        document.getElementById('resultModal').style.display = 'block';
    }
    
    withdrawPrizes() {
        if (this.inventory.length === 0) {
            alert('üéí –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç!');
            return;
        }
        
        const totalValue = this.inventory.reduce((sum, item) => sum + item.value, 0);
        
        if (confirm(`–í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –ø—Ä–∏–∑—ã –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é ${totalValue} –∑–≤–µ–∑–¥?`)) {
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–æ—Ç—É
            alert(`‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É! –°–≤—è–∂–∏—Ç–µ—Å—å —Å @KXKXKXKXKXKXKXKXKXKXK`);
            this.inventory = [];
            this.saveUserData();
            this.renderInventory();
        }
    }
    
    depositBalance() {
        alert(`üí∞ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: @KXKXKXKXKXKXKXKXKXKXK\n\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: 50 ‚≠ê\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ: 200 ‚≠ê`);
    }
    
    closeModal() {
        document.getElementById('resultModal').style.display = 'none';
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    new GhostFluxCasino();
});